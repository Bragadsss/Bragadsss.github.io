{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dti\\\\Desktop\\\\Portfolio\\\\Bragadsss.github.io\\\\src\\\\components\\\\Experience.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experience = () => {\n  // Deixe este array vazio se não tiver experiência\n  const jobs = [{\n    company: \"Nome da Empresa Atual\",\n    startDate: \"Data de Início\",\n    endDate: \"Presente\",\n    role: \"Cargo/Função\",\n    description: \"Descrição detalhada das atividades que você faz.\"\n  }, {\n    company: \"Nome da Empresa Anterior\",\n    startDate: \"Data de Início\",\n    endDate: \"Data de Desligamento\",\n    role: \"Cargo/Função\",\n    description: \"Descrição detalhada das atividades que você fazia.\"\n  }];\n  if (jobs.length === 0) {\n    return null; // Não renderiza a seção se não houver trabalhos\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"experience\",\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Experi\\xEAncia Profissional\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: job.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-company\",\n        children: [job.company, \" (\", job.startDate, \" - \", job.endDate, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Experience","jobs","company","startDate","endDate","role","description","length","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","index","_c","$RefreshReg$"],"sources":["C:/Users/dti/Desktop/Portfolio/Bragadsss.github.io/src/components/Experience.js"],"sourcesContent":["import React from 'react';\n\nconst Experience = () => {\n  // Deixe este array vazio se não tiver experiência\n  const jobs = [\n    {\n      company: \"Nome da Empresa Atual\",\n      startDate: \"Data de Início\",\n      endDate: \"Presente\",\n      role: \"Cargo/Função\",\n      description: \"Descrição detalhada das atividades que você faz.\"\n    },\n    {\n      company: \"Nome da Empresa Anterior\",\n      startDate: \"Data de Início\",\n      endDate: \"Data de Desligamento\",\n      role: \"Cargo/Função\",\n      description: \"Descrição detalhada das atividades que você fazia.\"\n    }\n  ];\n\n  if (jobs.length === 0) {\n    return null; // Não renderiza a seção se não houver trabalhos\n  }\n\n  return (\n    <section id=\"experience\" className=\"card\">\n      <h2>Experiência Profissional</h2>\n      {jobs.map((job, index) => (\n        <div key={index} className=\"job\">\n          <h3>{job.role}</h3>\n          <p className=\"job-company\">{job.company} ({job.startDate} - {job.endDate})</p>\n          <p>{job.description}</p>\n        </div>\n      ))}\n    </section>\n  );\n};\n\nexport default Experience;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB;EACA,MAAMC,IAAI,GAAG,CACX;IACEC,OAAO,EAAE,uBAAuB;IAChCC,SAAS,EAAE,gBAAgB;IAC3BC,OAAO,EAAE,UAAU;IACnBC,IAAI,EAAE,cAAc;IACpBC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,OAAO,EAAE,0BAA0B;IACnCC,SAAS,EAAE,gBAAgB;IAC3BC,OAAO,EAAE,sBAAsB;IAC/BC,IAAI,EAAE,cAAc;IACpBC,WAAW,EAAE;EACf,CAAC,CACF;EAED,IAAIL,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACER,OAAA;IAASS,EAAE,EAAC,YAAY;IAACC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACvCX,OAAA;MAAAW,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChCb,IAAI,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBlB,OAAA;MAAiBU,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAC9BX,OAAA;QAAAW,QAAA,EAAKM,GAAG,CAACX;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnBf,OAAA;QAAGU,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAEM,GAAG,CAACd,OAAO,EAAC,IAAE,EAACc,GAAG,CAACb,SAAS,EAAC,KAAG,EAACa,GAAG,CAACZ,OAAO,EAAC,GAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9Ef,OAAA;QAAAW,QAAA,EAAIM,GAAG,CAACV;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHhBG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAACI,EAAA,GAnCIlB,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}